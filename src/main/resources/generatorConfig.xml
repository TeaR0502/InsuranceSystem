<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration >
	<classPathEntry location="C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.38\mysql-connector-java-5.1.38.jar"/>
  <context id="context1" targetRuntime="MyBatis3">
  
  <!-- optional，旨在创建class时，对注释进行控制 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
  
    <jdbcConnection driverClass="com.mysql.jdbc.Driver" 
    connectionURL="jdbc:mysql:///insurance?characterEncoding=UTF8" 
    userId="root" 
    password="123654789" />
    
    <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>


        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <javaModelGenerator targetPackage="com.t.entity" targetProject="insurance/src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="insurance/src/main/java">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->

        <!-- targetPackage：mapper接口dao生成的位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.t.dao" targetProject="insurance/src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>
        
       <!-- 配置  表  实体类  映射 -->
     <!-- 
     <table schema="insurance" tableName="admin" >
      <columnOverride column="???" property="???" />
    </table>
      -->   
      
    <table schema="insurance" tableName="admin"  enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"    
               enableSelectByExample="false" selectByExampleQueryId="false" ></table>
    
    <table schema="insurance" tableName="application"  enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"    
               enableSelectByExample="false" selectByExampleQueryId="false" >
        <columnOverride column="addition" javaType="java.lang.String" jdbcType="VARCHAR" />  
        <columnOverride column="reply" javaType="java.lang.String" jdbcType="VARCHAR" />  
     	<columnOverride column="userid" property="userId" />
     	<columnOverride column="usertruename" property="userTruename" />
     	<columnOverride column="useridcard" property="userIdCard" />
     	<columnOverride column="productid" property="productId" />
     	<columnOverride column="productname" property="productName" />
     	<columnOverride column="productperiod" property="productPeriod" />
    </table>
    
    <table schema="insurance" tableName="product"  enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"    
               enableSelectByExample="false" selectByExampleQueryId="false" >
    	<columnOverride column="creatorid" property="creatorId" />
    	<columnOverride column="creatorname" property="creatorName" />
    	<columnOverride column="bottomprice" property="bottomPrice" />
    </table>
    
    <table schema="insurance" tableName="suggest"  enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"    
               enableSelectByExample="false" selectByExampleQueryId="false" >
 	   <columnOverride column="userid" property="userId" />
    </table>
    
    <table schema="insurance" tableName="user"  enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"    
               enableSelectByExample="false" selectByExampleQueryId="false" >
    	<columnOverride column="idcard" property="idCard" />
    </table>
  </context>
</generatorConfiguration>